function material = No166_rhombohedral_alphaAs(sphere_radius, cylinder_radius)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% No166_rhombohedral_alphaAs
%
% When c/a=sqrt(6) and z1=1/8 this becomes the diamond (A4) structure. Note that £\¡VAs
% (A_hR2_166_c, £\¡VAs), rhombohedral graphite (A_hR2_166_c, C), and £]¡VO (A_hR2_166_c, £]¡VO) 
% have the same AFLOW prototype label. They are generated by the same symmetry operations 
% with different sets of parameters (¡V¡Vparams) specified in their corresponding CIF files. 
% Hexagonal settings of this structure can be obtained with the option ¡V¡Vhex.
%        http://www.aflowlib.org/CrystalDatabase/A_hR2_166_c.alpha-As.html
%
% Edit at 2017/6/23 By Jia-Wei Lin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
material.Prototype    = 'alphaAs';
material.material_num = 1;

material.lattice_type = 'rhombohedral';
material.website      = 'http://www.aflowlib.org/CrystalDatabase/A_hR2_166_c.alpha-As.html';
material.x1           = 0.22754;

material.lattice_constant.a = 3.7595;
material.lattice_constant.c = sqrt(6)*material.lattice_constant.a;

[sphere_radius, cylinder_radius] = FAME_Material_Locate_Parameter_Foolproof( sphere_radius, cylinder_radius, material.material_num );
%% Shape description for As (Sphere)
material.parameters{1}.name                 = 'As';
material.parameters{1}.color_map            = [234 237 103]/255;

material.parameters{1}.sphere_centers       = [   material.x1,   material.x1,   material.x1;
                                                1-material.x1, 1-material.x1, 1-material.x1 ];
                                        
material.parameters{1}.sphere_radius        = sphere_radius(1)*ones(1,size(material.parameters{1}.sphere_centers,1)); 


%% Shape description for As (Cylinder)
material.parameters{1}.cylinder_bot_centers =  .5*[ material.parameters{1}.sphere_centers(2,:) - [0 1 1] + material.parameters{1}.sphere_centers(1,:);
                                                    material.parameters{1}.sphere_centers(2,:) - [1 0 1] + material.parameters{1}.sphere_centers(1,:);
                                                    material.parameters{1}.sphere_centers(2,:) - [1 1 0] + material.parameters{1}.sphere_centers(1,:);
                                                    material.parameters{1}.sphere_centers(1,:) + [1 1 0] + material.parameters{1}.sphere_centers(2,:);
                                                    material.parameters{1}.sphere_centers(1,:) + [1 0 1] + material.parameters{1}.sphere_centers(2,:);
                                                    material.parameters{1}.sphere_centers(1,:) + [0 1 1] + material.parameters{1}.sphere_centers(2,:)];
material.parameters{1}.cylinder_top_centers =  [ material.parameters{1}.sphere_centers(1,:);
                                                 material.parameters{1}.sphere_centers(1,:);
                                                 material.parameters{1}.sphere_centers(1,:);
                                                 material.parameters{1}.sphere_centers(2,:);
                                                 material.parameters{1}.sphere_centers(2,:);
                                                 material.parameters{1}.sphere_centers(2,:)];
                                              
                                          
material.parameters{1}.cylinder_radius        = cylinder_radius(1)*ones(1,size(material.parameters{1}.cylinder_bot_centers,1)); 



%% Collect color map
material.color_map = {material.parameters{1}.color_map};